name: CI

on:
  push:
  pull_request:

jobs:
  php-cs-fixer:
    name: PHP-CS-Fixer (PHP ${{ matrix.php }})
    runs-on: ubuntu-latest
    timeout-minutes: 20
    strategy:
      matrix:
        php:
          - '8'
      fail-fast: false
    env:
      PHP_CS_FIXER_FUTURE_MODE: '1'
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: intl, bcmath, curl, openssl, mbstring
          ini-values: memory_limit=-1
          tools: pecl, composer
          coverage: none
      - name: Cache Composer cache
        uses: actions/cache@v2
        with:
          path: ~/.composer/cache
          key: composer-cache-php${{ matrix.php }}
      - name: Install dependencies
        run: composer install --prefer-dist --no-interaction --no-progress
      - name: Run PHP-CS-Fixer fix
        run: ./vendor/bin/php-cs-fixer fix --dry-run --diff --ansi

  # phpstan tests
  phpstan:
    name: PHPStan (PHP ${{ matrix.php }})
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        php: [ "8.0" ]
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: "${{ matrix.php }}"
          tools: symfony
          coverage: none
      - name: Cache Composer cache
        uses: actions/cache@v2
        with:
          path: ~/.composer/cache
          key: composer-cache-php${{ matrix.php }}
      - name: Install dependencies
        run: composer install --prefer-dist --no-interaction --no-progress
      - name: Run PHPStan
        run: ./vendor/bin/phpstan analyse --no-interaction --no-progress --ansi

  # psalm tests
  psalm:
    name: Psalm (PHP ${{ matrix.php }})
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        php: [ "8.0" ]
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: "${{ matrix.php }}"
          tools: symfony
          coverage: none
      - name: Cache Composer cache
        uses: actions/cache@v2
        with:
          path: ~/.composer/cache
          key: composer-cache-php${{ matrix.php }}
      - name: Install dependencies
        run: composer install --prefer-dist --no-interaction --no-progress
      - name: Run Psalm
        run: vendor/bin/psalm --threads=3 --shepherd --stats

  # tests
  tests:
    name: Tests (PHP ${{ matrix.php }})
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        php: [ "8.0", "7.4" ]
        include:
          - php: '8.0'
            coverage: true
    env:
      DB_CONNECTION: sqlite
      DB_DATABASE: ./storage/data.db
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: "${{ matrix.php }}"
          tools: symfony,phpcov
          coverage: pcov
      - name: Cache Composer cache
        uses: actions/cache@v2
        with:
          path: ~/.composer/cache
          key: composer-cache-php${{ matrix.php }}
      - name: Enable code coverage
        if: matrix.coverage
        run: echo "COVERAGE=1" >> $GITHUB_ENV
      - name: Configure required files
        run: |
          touch ./storage/data.db
          cp .env.example .env
      - name: Install dependencies
        run: composer update --prefer-dist --no-interaction --no-progress
      - name: Configure Application
        run: |
          ./artisan key:generate
          ./artisan config:cache
          ./artisan passport:keys
          ./artisan migrate:fresh --seed
          yarn install
          yarn dev
          ./artisan config:clear
      - name: Run PHPSpec
        if: true != matrix.coverage
        run: ./vendor/bin/phpspec run
      - name: Run PHPUnit
        if: true != matrix.coverage
        run: ./artisan test
      - name: Run Coverage
        if: matrix.coverage
        run: composer coverage-clover
      - name: Upload coverage results to Codecov
        if: matrix.coverage
        uses: codecov/codecov-action@v1
        with:
          name: phpunit-php${{ matrix.php }}
          fail_ci_if_error: true
        continue-on-error: true
